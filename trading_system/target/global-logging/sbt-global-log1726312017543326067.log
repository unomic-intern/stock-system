[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 300.9689ms
[debug]       Load.loadUnit: defsScala took 0.4872ms
[debug] [Loading] Scanning directory C:\Users\SM\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SM\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 38.5975 ms
[debug]           Load.resolveProject(global-plugins) took 70.9918ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\SM\.sbt\1.0\plugins, plugins: List(<none>))) took 169.1658ms
[debug] [Loading] Done in C:\Users\SM\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 212.6175ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.471ms
[debug]     Load.loadUnit(file:/C:/Users/SM/.sbt/1.0/plugins/, ...) took 531.3053ms
[debug]   Load.apply: load took 827.9106ms
[debug]   Load.apply: resolveProjects took 15.122ms
[debug]   Load.apply: finalTransforms took 100.2652ms
[debug]   Load.apply: config.delegates took 17.4743ms
[debug]   Load.apply: Def.make(settings)... took 1475.159ms
[debug]   Load.apply: structureIndex took 144.0895ms
[debug]   Load.apply: mkStreams took 2.3781ms
[info] loading global plugins from C:\Users\SM\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7434.3254ms
[debug]           Load.loadUnit: plugins took 47.5789ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\SM\2021_Trading_System\project
[debug]             Load.loadUnit: mkEval took 13.0666ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SM\2021_Trading_System\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6285 ms
[info] loading settings for project root-2021_trading_system-build from idea.sbt ...
[debug]               Load.resolveProject(root-2021_trading_system-build) took 8.5941ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-2021_trading_system-build, base: C:\Users\SM\2021_Trading_System\project, plugins: List(<none>))) took 11.9956ms
[debug] [Loading] Done in C:\Users\SM\2021_Trading_System\project, returning: (root-2021_trading_system-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3441.316ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1882ms
[debug]         Load.loadUnit(file:/C:/Users/SM/2021_Trading_System/project/, ...) took 3496.5849ms
[debug]       Load.apply: load took 3498.6909ms
[debug]       Load.apply: resolveProjects took 0.1249ms
[debug]       Load.apply: finalTransforms took 13.5289ms
[debug]       Load.apply: config.delegates took 0.7392ms
[debug]       Load.apply: Def.make(settings)... took 96.2751ms
[debug]       Load.apply: structureIndex took 39.8121ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\SM\2021_Trading_System\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5123.5732ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\SM\2021_Trading_System
[debug]       Load.loadUnit: mkEval took 0.4157ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SM\2021_Trading_System, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.6149 ms
[info] loading settings for project root-2021_trading_system from build.sbt ...
[debug]         Load.resolveProject(root-2021_trading_system) took 61.1909ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root-2021_trading_system, base: C:\Users\SM\2021_Trading_System, plugins: List(<none>))) took 66.136ms
[debug] [Loading] Done in C:\Users\SM\2021_Trading_System, returning: (root-2021_trading_system)
[debug]     Load.loadUnit: loadedProjectsRaw took 1393.7346ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.6785ms
[debug]   Load.loadUnit(file:/C:/Users/SM/2021_Trading_System/, ...) took 6540.8375ms
[debug] Load.apply: load took 6543.3581ms
[debug] Load.apply: resolveProjects took 0.1254ms
[debug] Load.apply: finalTransforms took 34.1824ms
[debug] Load.apply: config.delegates took 0.3882ms
[debug] Load.apply: Def.make(settings)... took 122.6206ms
[debug] Load.apply: structureIndex took 42.1265ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to 2021_Trading_System (in build file:/C:/Users/SM/2021_Trading_System/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 2968 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 2968, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to 2021_Trading_System (in build file:/C:/Users/SM/2021_Trading_System/)
[debug] > Exec(idea-shell, None, None)
